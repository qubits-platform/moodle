{"version":3,"sources":["../src/newgroup.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","NewGroup","args","url","contextid","nodeContent","init","prototype","modal","resp","getBody","append","self","done","data","html","javascript","dlg","dialog","resizable","autoOpen","width","title","close","remove","bind","e","preventDefault","submitFormAjax","formdata","jsonformdata","JSON","stringify","promise","call","handleFormSubmissionResponse","formerror","alert","handleFormSubmissionFailure","form","serialize","response","fail","submitForm","getRoot","find","submit"],"mappings":"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","sourcesContent":["/**\r\n * Add a create new group modal to the page.\r\n *\r\n * @module     core_group/newgroup\r\n * @class      NewGroup\r\n * @package    core_group\r\n * @copyright  2017 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'block_learnerscript/ajax', 'core/yui', 'core/templates', 'core/modal'],\r\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates, Modal) {\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @param {int} contextid\r\n     *\r\n     * Each call to init gets it's own instance of this class.\r\n     */\r\n    var NewGroup = function(args, url) {\r\n        this.args = args;\r\n        this.contextid = 1;\r\n        this.url = url;\r\n        this.nodeContent = args.nodeContent || 'ajaxForm';\r\n        this.init(this.args);\r\n    };\r\n\r\n    /**\r\n     * @var {Modal} modal\r\n     * @private\r\n     */\r\n    NewGroup.prototype.modal = null;\r\n\r\n    /**\r\n     * @var {int} contextid\r\n     * @private\r\n     */\r\n    NewGroup.prototype.contextid = -1;\r\n\r\n    /**\r\n     * Initialise the class.\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewGroup.prototype.init = function(args) {\r\n                var resp = this.getBody();\r\n                $('body').append(\"<div class='\"+this.nodeContent+\"'></div>\");\r\n                var self = this;\r\n                resp.done(function(data) {\r\n//                    Templates.replaceNodeContents('.'+self.nodeContent, data.html);\r\n                    $('.ajaxForm').html(data.html);\r\n                    $('head').append(data.javascript);\r\n                });\r\n\r\n                var dlg = $(\".\"+ this.nodeContent).dialog({\r\n                    resizable: true,\r\n                    autoOpen: false,\r\n                    width: \"60%\",\r\n                    title: this.args.title,\r\n                    modal: true,\r\n                    close: function(event, ui) {\r\n                        $(this).dialog('destroy').remove();\r\n                    }\r\n                });\r\n                var self = this;\r\n                $('.'+this.nodeContent+' .mform').bind('submit', function(e){\r\n                    e.preventDefault();\r\n                    self.submitFormAjax(this);\r\n                })\r\n            // document.getElementById(args.form).addEventListener('submit', function(ev) {\r\n            //     this.submitFormAjax();\r\n            // }\r\n\r\n            //     $('.plotforms').on('submit', 'form', this.submitFormAjax(this, $('.plotforms .mform')));\r\n                dlg.dialog(\"open\");\r\n\r\n    };\r\n\r\n    /**\r\n     * @method getBody\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewGroup.prototype.getBody = function(formdata) {\r\n        if (typeof formdata === \"undefined\") {\r\n            formdata = null;\r\n        } else {\r\n            // Get the content of the modal.\r\n           this.args.jsonformdata = JSON.stringify(formdata);\r\n        }\r\n\r\n        var promise = Ajax.call({\r\n            args : this.args,\r\n            url: this.url\r\n            }, false);\r\n\r\n        return promise;\r\n\r\n\r\n        //return Fragment.loadFragment('block_learnerscript', 'example', 1, this.args);\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionResponse\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewGroup.prototype.handleFormSubmissionResponse = function(data) {\r\n        if(data.formerror) {\r\n            $('.ajaxForm').html(data.html);\r\n            $('head').append(data.javascript);\r\n                var self = this;\r\n                $('.'+this.nodeContent+' .mform').bind('submit', function(e){\r\n                    e.preventDefault();\r\n                    self.submitFormAjax(this);\r\n                })\r\n        } else {\r\n            alert(\"Success!\");\r\n        }\r\n        // this.modal.hide();\r\n        // // We could trigger an event instead.\r\n        // // Yuk.\r\n        // Y.use('moodle-core-formchangechecker', function() {\r\n        //     M.core_formchangechecker.reset_form_dirty_state();\r\n        // });\r\n        // document.location.reload();\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionFailure\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewGroup.prototype.handleFormSubmissionFailure = function(data) {\r\n        // if(data.formerror) {\r\n        //     $('.ajaxForm').html(data.html);\r\n        // } else {\r\n        //     alert(\"Success!\");\r\n        // }\r\n        // Oh noes! Epic fail :(\r\n        // Ah wait - this is normal. We need to re-display the form with errors!\r\n        //this.modal.setBody(this.getBody(data));\r\n    };\r\n\r\n    /**\r\n     * Private method\r\n     *\r\n     * @method submitFormAjax\r\n     * @private\r\n     * @param {Event} e Form submission event.\r\n     */\r\n    NewGroup.prototype.submitFormAjax = function(form) {\r\n\r\n        // We don't want to do a real form submission.\r\n        // Convert all the form elements values to a serialised string.\r\n        this.args.jsonformdata = $(form).serialize();\r\n        var self  = this;\r\n            var promise = Ajax.call({\r\n                args: this.args,\r\n                url: this.url\r\n            });\r\n            promise.done(function(response) {\r\n                self.handleFormSubmissionResponse(response);\r\n            }).fail(function(ex) {\r\n            });\r\n    };\r\n\r\n    /**\r\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n     *\r\n     * @method submitForm\r\n     * @param {Event} e Form submission event.\r\n     * @private\r\n     */\r\n    NewGroup.prototype.submitForm = function(e) {\r\n        e.preventDefault();\r\n        this.modal.getRoot().find('form').submit();\r\n    };\r\n\r\n    return /** @alias module:core_group/newgroup */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Attach event listeners to initialise this module.\r\n         *\r\n         * @method init\r\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\r\n         * @param {int} contextid The contextid for the course.\r\n         * @return {Promise}\r\n         */\r\n        init: function(args) {\r\n            return new NewGroup(args, url);\r\n        }\r\n    };\r\n});"],"file":"newgroup.min.js"}